-- Automatically generated by util/generate-tmr-hsc.pl
module System.Hardware.MercuryApi.Params where

import Data.ByteString (ByteString)
import Data.Int
import Data.Text (Text)
import Data.Word

import System.Hardware.MercuryApi

paramSetBaudRate :: Reader -> Word32 -> IO ()
paramSetBaudRate rdr = paramSet rdr PARAM_BAUDRATE

paramGetBaudRate :: Reader -> IO Word32
paramGetBaudRate rdr = paramGet rdr PARAM_BAUDRATE

paramSetProbeBaudRates :: Reader -> [Word32] -> IO ()
paramSetProbeBaudRates rdr = paramSet rdr PARAM_PROBEBAUDRATES

paramGetProbeBaudRates :: Reader -> IO [Word32]
paramGetProbeBaudRates rdr = paramGet rdr PARAM_PROBEBAUDRATES

paramSetCommandTimeout :: Reader -> Word32 -> IO ()
paramSetCommandTimeout rdr = paramSet rdr PARAM_COMMANDTIMEOUT

paramGetCommandTimeout :: Reader -> IO Word32
paramGetCommandTimeout rdr = paramGet rdr PARAM_COMMANDTIMEOUT

paramSetTransportTimeout :: Reader -> Word32 -> IO ()
paramSetTransportTimeout rdr = paramSet rdr PARAM_TRANSPORTTIMEOUT

paramGetTransportTimeout :: Reader -> IO Word32
paramGetTransportTimeout rdr = paramGet rdr PARAM_TRANSPORTTIMEOUT

paramSetAntennaCheckPort :: Reader -> Bool -> IO ()
paramSetAntennaCheckPort rdr = paramSet rdr PARAM_ANTENNA_CHECKPORT

paramGetAntennaCheckPort :: Reader -> IO Bool
paramGetAntennaCheckPort rdr = paramGet rdr PARAM_ANTENNA_CHECKPORT

paramSetAntennaPortList :: Reader -> [Word8] -> IO ()
paramSetAntennaPortList rdr = paramSet rdr PARAM_ANTENNA_PORTLIST

paramGetAntennaPortList :: Reader -> IO [Word8]
paramGetAntennaPortList rdr = paramGet rdr PARAM_ANTENNA_PORTLIST

paramSetAntennaConnectedPortList :: Reader -> [Word8] -> IO ()
paramSetAntennaConnectedPortList rdr = paramSet rdr PARAM_ANTENNA_CONNECTEDPORTLIST

paramGetAntennaConnectedPortList :: Reader -> IO [Word8]
paramGetAntennaConnectedPortList rdr = paramGet rdr PARAM_ANTENNA_CONNECTEDPORTLIST

paramSetAntennaPortSwitchGpos :: Reader -> [Word8] -> IO ()
paramSetAntennaPortSwitchGpos rdr = paramSet rdr PARAM_ANTENNA_PORTSWITCHGPOS

paramGetAntennaPortSwitchGpos :: Reader -> IO [Word8]
paramGetAntennaPortSwitchGpos rdr = paramGet rdr PARAM_ANTENNA_PORTSWITCHGPOS

paramSetGpioInputList :: Reader -> [Word8] -> IO ()
paramSetGpioInputList rdr = paramSet rdr PARAM_GPIO_INPUTLIST

paramGetGpioInputList :: Reader -> IO [Word8]
paramGetGpioInputList rdr = paramGet rdr PARAM_GPIO_INPUTLIST

paramSetGpioOutputList :: Reader -> [Word8] -> IO ()
paramSetGpioOutputList rdr = paramSet rdr PARAM_GPIO_OUTPUTLIST

paramGetGpioOutputList :: Reader -> IO [Word8]
paramGetGpioOutputList rdr = paramGet rdr PARAM_GPIO_OUTPUTLIST

paramSetReadAsyncOffTime :: Reader -> Word32 -> IO ()
paramSetReadAsyncOffTime rdr = paramSet rdr PARAM_READ_ASYNCOFFTIME

paramGetReadAsyncOffTime :: Reader -> IO Word32
paramGetReadAsyncOffTime rdr = paramGet rdr PARAM_READ_ASYNCOFFTIME

paramSetReadAsyncOnTime :: Reader -> Word32 -> IO ()
paramSetReadAsyncOnTime rdr = paramSet rdr PARAM_READ_ASYNCONTIME

paramGetReadAsyncOnTime :: Reader -> IO Word32
paramGetReadAsyncOnTime rdr = paramGet rdr PARAM_READ_ASYNCONTIME

paramSetReadPlan :: Reader -> ReadPlan -> IO ()
paramSetReadPlan rdr = paramSet rdr PARAM_READ_PLAN

paramGetReadPlan :: Reader -> IO ReadPlan
paramGetReadPlan rdr = paramGet rdr PARAM_READ_PLAN

paramSetRadioEnablePowerSave :: Reader -> Bool -> IO ()
paramSetRadioEnablePowerSave rdr = paramSet rdr PARAM_RADIO_ENABLEPOWERSAVE

paramGetRadioEnablePowerSave :: Reader -> IO Bool
paramGetRadioEnablePowerSave rdr = paramGet rdr PARAM_RADIO_ENABLEPOWERSAVE

paramSetRadioPowerMax :: Reader -> Int16 -> IO ()
paramSetRadioPowerMax rdr = paramSet rdr PARAM_RADIO_POWERMAX

paramGetRadioPowerMax :: Reader -> IO Int16
paramGetRadioPowerMax rdr = paramGet rdr PARAM_RADIO_POWERMAX

paramSetRadioPowerMin :: Reader -> Int16 -> IO ()
paramSetRadioPowerMin rdr = paramSet rdr PARAM_RADIO_POWERMIN

paramGetRadioPowerMin :: Reader -> IO Int16
paramGetRadioPowerMin rdr = paramGet rdr PARAM_RADIO_POWERMIN

paramSetRadioReadPower :: Reader -> Int32 -> IO ()
paramSetRadioReadPower rdr = paramSet rdr PARAM_RADIO_READPOWER

paramGetRadioReadPower :: Reader -> IO Int32
paramGetRadioReadPower rdr = paramGet rdr PARAM_RADIO_READPOWER

paramSetRadioWritePower :: Reader -> Int32 -> IO ()
paramSetRadioWritePower rdr = paramSet rdr PARAM_RADIO_WRITEPOWER

paramGetRadioWritePower :: Reader -> IO Int32
paramGetRadioWritePower rdr = paramGet rdr PARAM_RADIO_WRITEPOWER

paramSetRadioTemperature :: Reader -> Int8 -> IO ()
paramSetRadioTemperature rdr = paramSet rdr PARAM_RADIO_TEMPERATURE

paramGetRadioTemperature :: Reader -> IO Int8
paramGetRadioTemperature rdr = paramGet rdr PARAM_RADIO_TEMPERATURE

paramSetTagReadDataRecordHighestRssi :: Reader -> Bool -> IO ()
paramSetTagReadDataRecordHighestRssi rdr = paramSet rdr PARAM_TAGREADDATA_RECORDHIGHESTRSSI

paramGetTagReadDataRecordHighestRssi :: Reader -> IO Bool
paramGetTagReadDataRecordHighestRssi rdr = paramGet rdr PARAM_TAGREADDATA_RECORDHIGHESTRSSI

paramSetTagReadDataReportRssiInDbm :: Reader -> Bool -> IO ()
paramSetTagReadDataReportRssiInDbm rdr = paramSet rdr PARAM_TAGREADDATA_REPORTRSSIINDBM

paramGetTagReadDataReportRssiInDbm :: Reader -> IO Bool
paramGetTagReadDataReportRssiInDbm rdr = paramGet rdr PARAM_TAGREADDATA_REPORTRSSIINDBM

paramSetTagReadDataUniqueByAntenna :: Reader -> Bool -> IO ()
paramSetTagReadDataUniqueByAntenna rdr = paramSet rdr PARAM_TAGREADDATA_UNIQUEBYANTENNA

paramGetTagReadDataUniqueByAntenna :: Reader -> IO Bool
paramGetTagReadDataUniqueByAntenna rdr = paramGet rdr PARAM_TAGREADDATA_UNIQUEBYANTENNA

paramSetTagReadDataUniqueByData :: Reader -> Bool -> IO ()
paramSetTagReadDataUniqueByData rdr = paramSet rdr PARAM_TAGREADDATA_UNIQUEBYDATA

paramGetTagReadDataUniqueByData :: Reader -> IO Bool
paramGetTagReadDataUniqueByData rdr = paramGet rdr PARAM_TAGREADDATA_UNIQUEBYDATA

paramSetTagopAntenna :: Reader -> Word8 -> IO ()
paramSetTagopAntenna rdr = paramSet rdr PARAM_TAGOP_ANTENNA

paramGetTagopAntenna :: Reader -> IO Word8
paramGetTagopAntenna rdr = paramGet rdr PARAM_TAGOP_ANTENNA

paramSetTagopProtocol :: Reader -> TagProtocol -> IO ()
paramSetTagopProtocol rdr = paramSet rdr PARAM_TAGOP_PROTOCOL

paramGetTagopProtocol :: Reader -> IO TagProtocol
paramGetTagopProtocol rdr = paramGet rdr PARAM_TAGOP_PROTOCOL

paramSetVersionHardware :: Reader -> Text -> IO ()
paramSetVersionHardware rdr = paramSet rdr PARAM_VERSION_HARDWARE

paramGetVersionHardware :: Reader -> IO Text
paramGetVersionHardware rdr = paramGet rdr PARAM_VERSION_HARDWARE

paramSetVersionSerial :: Reader -> Text -> IO ()
paramSetVersionSerial rdr = paramSet rdr PARAM_VERSION_SERIAL

paramGetVersionSerial :: Reader -> IO Text
paramGetVersionSerial rdr = paramGet rdr PARAM_VERSION_SERIAL

paramSetVersionModel :: Reader -> Text -> IO ()
paramSetVersionModel rdr = paramSet rdr PARAM_VERSION_MODEL

paramGetVersionModel :: Reader -> IO Text
paramGetVersionModel rdr = paramGet rdr PARAM_VERSION_MODEL

paramSetVersionSoftware :: Reader -> Text -> IO ()
paramSetVersionSoftware rdr = paramSet rdr PARAM_VERSION_SOFTWARE

paramGetVersionSoftware :: Reader -> IO Text
paramGetVersionSoftware rdr = paramGet rdr PARAM_VERSION_SOFTWARE

paramSetVersionSupportedProtocols :: Reader -> [TagProtocol] -> IO ()
paramSetVersionSupportedProtocols rdr = paramSet rdr PARAM_VERSION_SUPPORTEDPROTOCOLS

paramGetVersionSupportedProtocols :: Reader -> IO [TagProtocol]
paramGetVersionSupportedProtocols rdr = paramGet rdr PARAM_VERSION_SUPPORTEDPROTOCOLS

paramSetRegionHopTable :: Reader -> [Word32] -> IO ()
paramSetRegionHopTable rdr = paramSet rdr PARAM_REGION_HOPTABLE

paramGetRegionHopTable :: Reader -> IO [Word32]
paramGetRegionHopTable rdr = paramGet rdr PARAM_REGION_HOPTABLE

paramSetRegionHopTime :: Reader -> Word32 -> IO ()
paramSetRegionHopTime rdr = paramSet rdr PARAM_REGION_HOPTIME

paramGetRegionHopTime :: Reader -> IO Word32
paramGetRegionHopTime rdr = paramGet rdr PARAM_REGION_HOPTIME

paramSetRegionId :: Reader -> Region -> IO ()
paramSetRegionId rdr = paramSet rdr PARAM_REGION_ID

paramGetRegionId :: Reader -> IO Region
paramGetRegionId rdr = paramGet rdr PARAM_REGION_ID

paramSetRegionSupportedRegions :: Reader -> [Region] -> IO ()
paramSetRegionSupportedRegions rdr = paramSet rdr PARAM_REGION_SUPPORTEDREGIONS

paramGetRegionSupportedRegions :: Reader -> IO [Region]
paramGetRegionSupportedRegions rdr = paramGet rdr PARAM_REGION_SUPPORTEDREGIONS

paramSetRegionLbtEnable :: Reader -> Bool -> IO ()
paramSetRegionLbtEnable rdr = paramSet rdr PARAM_REGION_LBT_ENABLE

paramGetRegionLbtEnable :: Reader -> IO Bool
paramGetRegionLbtEnable rdr = paramGet rdr PARAM_REGION_LBT_ENABLE

paramSetLicenseKey :: Reader -> [Word8] -> IO ()
paramSetLicenseKey rdr = paramSet rdr PARAM_LICENSE_KEY

paramGetLicenseKey :: Reader -> IO [Word8]
paramGetLicenseKey rdr = paramGet rdr PARAM_LICENSE_KEY

paramSetRadioEnableSJC :: Reader -> Bool -> IO ()
paramSetRadioEnableSJC rdr = paramSet rdr PARAM_RADIO_ENABLESJC

paramGetRadioEnableSJC :: Reader -> IO Bool
paramGetRadioEnableSJC rdr = paramGet rdr PARAM_RADIO_ENABLESJC

paramSetExtendedEpc :: Reader -> Bool -> IO ()
paramSetExtendedEpc rdr = paramSet rdr PARAM_EXTENDEDEPC

paramGetExtendedEpc :: Reader -> IO Bool
paramGetExtendedEpc rdr = paramGet rdr PARAM_EXTENDEDEPC

paramSetUri :: Reader -> Text -> IO ()
paramSetUri rdr = paramSet rdr PARAM_URI

paramGetUri :: Reader -> IO Text
paramGetUri rdr = paramGet rdr PARAM_URI

paramSetVersionProductGroupID :: Reader -> Word16 -> IO ()
paramSetVersionProductGroupID rdr = paramSet rdr PARAM_PRODUCT_GROUP_ID

paramGetVersionProductGroupID :: Reader -> IO Word16
paramGetVersionProductGroupID rdr = paramGet rdr PARAM_PRODUCT_GROUP_ID

paramSetVersionProductGroup :: Reader -> Text -> IO ()
paramSetVersionProductGroup rdr = paramSet rdr PARAM_PRODUCT_GROUP

paramGetVersionProductGroup :: Reader -> IO Text
paramGetVersionProductGroup rdr = paramGet rdr PARAM_PRODUCT_GROUP

paramSetVersionProductID :: Reader -> Word16 -> IO ()
paramSetVersionProductID rdr = paramSet rdr PARAM_PRODUCT_ID

paramGetVersionProductID :: Reader -> IO Word16
paramGetVersionProductID rdr = paramGet rdr PARAM_PRODUCT_ID

paramSetTagReadDataTagopSuccesses :: Reader -> Word16 -> IO ()
paramSetTagReadDataTagopSuccesses rdr = paramSet rdr PARAM_TAGREADATA_TAGOPSUCCESSCOUNT

paramGetTagReadDataTagopSuccesses :: Reader -> IO Word16
paramGetTagReadDataTagopSuccesses rdr = paramGet rdr PARAM_TAGREADATA_TAGOPSUCCESSCOUNT

paramSetTagReadDataTagopFailures :: Reader -> Word16 -> IO ()
paramSetTagReadDataTagopFailures rdr = paramSet rdr PARAM_TAGREADATA_TAGOPFAILURECOUNT

paramGetTagReadDataTagopFailures :: Reader -> IO Word16
paramGetTagReadDataTagopFailures rdr = paramGet rdr PARAM_TAGREADATA_TAGOPFAILURECOUNT

paramSetStatusAntennaEnable :: Reader -> Bool -> IO ()
paramSetStatusAntennaEnable rdr = paramSet rdr PARAM_STATUS_ENABLE_ANTENNAREPORT

paramGetStatusAntennaEnable :: Reader -> IO Bool
paramGetStatusAntennaEnable rdr = paramGet rdr PARAM_STATUS_ENABLE_ANTENNAREPORT

paramSetStatusFrequencyEnable :: Reader -> Bool -> IO ()
paramSetStatusFrequencyEnable rdr = paramSet rdr PARAM_STATUS_ENABLE_FREQUENCYREPORT

paramGetStatusFrequencyEnable :: Reader -> IO Bool
paramGetStatusFrequencyEnable rdr = paramGet rdr PARAM_STATUS_ENABLE_FREQUENCYREPORT

paramSetStatusTemperatureEnable :: Reader -> Bool -> IO ()
paramSetStatusTemperatureEnable rdr = paramSet rdr PARAM_STATUS_ENABLE_TEMPERATUREREPORT

paramGetStatusTemperatureEnable :: Reader -> IO Bool
paramGetStatusTemperatureEnable rdr = paramGet rdr PARAM_STATUS_ENABLE_TEMPERATUREREPORT

paramSetTagReadDataEnableReadFilter :: Reader -> Bool -> IO ()
paramSetTagReadDataEnableReadFilter rdr = paramSet rdr PARAM_TAGREADDATA_ENABLEREADFILTER

paramGetTagReadDataEnableReadFilter :: Reader -> IO Bool
paramGetTagReadDataEnableReadFilter rdr = paramGet rdr PARAM_TAGREADDATA_ENABLEREADFILTER

paramSetTagReadDataReadFilterTimeout :: Reader -> Int32 -> IO ()
paramSetTagReadDataReadFilterTimeout rdr = paramSet rdr PARAM_TAGREADDATA_READFILTERTIMEOUT

paramGetTagReadDataReadFilterTimeout :: Reader -> IO Int32
paramGetTagReadDataReadFilterTimeout rdr = paramGet rdr PARAM_TAGREADDATA_READFILTERTIMEOUT

paramSetTagReadDataUniqueByProtocol :: Reader -> Bool -> IO ()
paramSetTagReadDataUniqueByProtocol rdr = paramSet rdr PARAM_TAGREADDATA_UNIQUEBYPROTOCOL

paramGetTagReadDataUniqueByProtocol :: Reader -> IO Bool
paramGetTagReadDataUniqueByProtocol rdr = paramGet rdr PARAM_TAGREADDATA_UNIQUEBYPROTOCOL

paramSetDescription :: Reader -> Text -> IO ()
paramSetDescription rdr = paramSet rdr PARAM_READER_DESCRIPTION

paramGetDescription :: Reader -> IO Text
paramGetDescription rdr = paramGet rdr PARAM_READER_DESCRIPTION

paramSetHostname :: Reader -> Text -> IO ()
paramSetHostname rdr = paramSet rdr PARAM_READER_HOSTNAME

paramGetHostname :: Reader -> IO Text
paramGetHostname rdr = paramGet rdr PARAM_READER_HOSTNAME

paramSetGen2WriteReplyTimeout :: Reader -> Word16 -> IO ()
paramSetGen2WriteReplyTimeout rdr = paramSet rdr PARAM_READER_WRITE_REPLY_TIMEOUT

paramGetGen2WriteReplyTimeout :: Reader -> IO Word16
paramGetGen2WriteReplyTimeout rdr = paramGet rdr PARAM_READER_WRITE_REPLY_TIMEOUT

paramSetGen2WriteEarlyExit :: Reader -> Bool -> IO ()
paramSetGen2WriteEarlyExit rdr = paramSet rdr PARAM_READER_WRITE_EARLY_EXIT

paramGetGen2WriteEarlyExit :: Reader -> IO Bool
paramGetGen2WriteEarlyExit rdr = paramGet rdr PARAM_READER_WRITE_EARLY_EXIT

paramSetTriggerReadGpi :: Reader -> [Word8] -> IO ()
paramSetTriggerReadGpi rdr = paramSet rdr PARAM_TRIGGER_READ_GPI

paramGetTriggerReadGpi :: Reader -> IO [Word8]
paramGetTriggerReadGpi rdr = paramGet rdr PARAM_TRIGGER_READ_GPI

paramSetMetadataflags :: Reader -> [MetadataFlag] -> IO ()
paramSetMetadataflags rdr = paramSet rdr PARAM_METADATAFLAG

paramGetMetadataflags :: Reader -> IO [MetadataFlag]
paramGetMetadataflags rdr = paramGet rdr PARAM_METADATAFLAG

